import glob
import os.path
import itertools
import os
import sys
import warnings
import subprocess

SOURCE_DIR = '../../_m'
EXT = '.bam'

def sample_dict_iter(path, ext):
    for filename in glob.iglob(path+'/*'+ext):
        sample = os.path.basename(filename)[:-len(ext)]
        yield sample, {'filename': SOURCE_DIR + '/' + sample + '.bam'}

SAMPLE_DICT = {k:v for k,v in sample_dict_iter(SOURCE_DIR, EXT)}

#insure errors propogate along pipe'd shell commands
shell.prefix("set -o pipefail; ")

rule all:
    input:
        expand('../_m/{sample}.{ext}',
               sample=SAMPLE_DICT.keys(),
             ext=['bgz', 'bgz.tbi'])

rule tabix:
    input:
        '../../_m/{sample}.bam'

    output:
        bgz = '../_m/{sample}.bgz',
        tbi = '../_m/{sample}.bgz.tbi'

    params:
        sample = '{sample}'

    shell:
        '''
    module load tabix/1.13 samtools/1.15.1 bzip2/1.0.8

    export PATH=$HOME'/.local/bin:'$PATH

    TMP_DIR='tmp.{params.sample}'
    mkdir ${{TMP_DIR}}

    export LC_ALL=C

    ( samtools view {input} | ../_h/sam_to_tabix.py 2>{params.sample}.stderr | sort --temporary-directory=${{TMP_DIR}} --buffer-size=10G -k1,1 -k2,2n -k3,3n | bgzip2 -c > {output.bgz} )

    rmdir ${{TMP_DIR}}

    tabix -s 1 -b 2 -e 3 -0 {output.bgz}
'''
