import glob
import os.path
import itertools

SOURCE_DIR = '../../_m'
EXT = '_pass_1.fastq.gz'

def sample_dict_iter(path, ext):
    for filename in glob.iglob(path+'/*'+ext):
        sample = os.path.basename(filename)[:-len(ext)]
        yield sample, {'r1_in': SOURCE_DIR + '/' + sample + '_pass_1.fastq.gz',
                                 'r2_in': SOURCE_DIR + '/' + sample + '_pass_2.fastq.gz'
                    }

SAMPLE_DICT = {k:v for k,v in sample_dict_iter(SOURCE_DIR, EXT)}

#insure errors propogate along pipe'd shell commands
shell.prefix("set -o pipefail; ")

rule all:
    input:
        expand('../_m/{sample}.bam',
             sample=SAMPLE_DICT.keys())

rule bwamem:
    input:
        r1 = lambda x: SAMPLE_DICT[x.sample]['r1_in'],
            r2 = lambda x: SAMPLE_DICT[x.sample]['r2_in']

    output:
        '../_m/{sample}.bam'

    params:
        sample = '{sample}'

    shell:
        '''
    module load bwa-mem/0.7.17 samtools/1.15.1

    export PATH=$HOME'/.local/bin:'$PATH

    GENOME='../../../../genome/hs37d5/names_as_hg19/bwa/_m/hs37d5_hg19.fa'

    bwa mem -T 19 -t 4 ${{GENOME}} {input.r1} {input.r2} 2> {params.sample}.stderr | samtools view -S -b - > {output}
'''
